\relax 
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces The first tree is a binary heap; it doesn't matter that the ten on the second row is less than elements on the third row, the defining propery is that nodes are bigger than their children and smaller than their parents. Similarly, it doesn't matter that the third row isn't complete, since this is the lowest row. The second tree isn't complete, there are gaps on the second row even though there are nodes on the third row. The third tree doesn't satisfy the heap property, the 40 is bigger than the 30 above it.}}{1}}
\newlabel{fig:example_trees}{{1}{1}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces \textbf  {A} shows the tree before the new node is added; in \textbf  {B} the new node is added to the first available slot and in \textbf  {C} and \textbf  {D} it bubbles upwards to its correct position.}}{2}}
\newlabel{fig:adding}{{2}{2}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces \textbf  {A} shows the tree before the root node is deleted; in \textbf  {B} the node is removed and replace with the five from the lowest layer and in \textbf  {C} to \textbf  {E} this five sinks back downwards to its correct position.}}{4}}
\newlabel{fig:removing}{{3}{4}}
